@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
    @if (User.Identity.IsAuthenticated)
    {
        if (SignInManager.IsSignedIn(User))
        {


            <div class="nav-menu d-flex justify-content-between">
                <li class="nav-item pl-3 pr-3">
                    <a class="nav-link text-light text-black-50" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">@User.Identity.Name</a>
                </li>
                <li class="nav-item">
                    <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                        <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
                    </form>
                </li>

                @if (User.IsInRole("admin"))
                {
                    <a class="ml-4" href="/AspNetRoles">Role</a>
                    <a class="ml-4" href="/AspNetUsers">Users Controle</a>
                    <a class="ml-4" href="/AspNetUserRoles">Roles manager</a>
                }
            </div>



        }


    }
    else
    {
        <div class="d-flex">

            <li class="nav-item">
                <a class="nav-link text-dark pl-3" asp-area="Identity" asp-page="/Account/Register">Register</a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-dark pl-3" asp-area="Identity" asp-page="/Account/Login">Login</a>
            </li>
        </div>
    }
</ul>
